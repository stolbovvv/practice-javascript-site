{"version":3,"sources":["index.js"],"names":["window","addEventListener","tabsTriggerWrapper","document","querySelector","tabsTriggerItems","querySelectorAll","tabsContentItems","hideTabContent","forEach","item","classList","add","remove","showTabContent","i","arguments","length","undefined","e","target","matches","index","setClock","selector","endtime","timer","days","hours","minutes","seconds","timeInterval","correctTimeTtem","time","updateClock","timeData","getTimeRemaning","timeDifference","Date","Math","floor","textContent","clearInterval","setInterval"],"mappings":"AAAA,aAEAA,OAAOC,iBAAiB,oBAAoB,KAE1C,MAAMC,mBAAqBC,SAASC,cAAc,qBAC5CC,iBAAmBF,SAASG,iBAAiB,oBAC7CC,iBAAmBJ,SAASG,iBAAiB,eAEnD,SAASE,iBACPD,iBAAiBE,SAASC,OACxBA,KAAKC,UAAUC,IAAI,QACnBF,KAAKC,UAAUE,OAAO,OAAQ,OAAO,IAGvCR,iBAAiBI,SAASC,OACxBA,KAAKC,UAAUE,OAAO,yBAAyB,GAEnD,CAEA,SAASC,iBAAsB,IAAPC,EAACC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC1BT,iBAAiBQ,GAAGJ,UAAUC,IAAI,OAAQ,QAC1CL,iBAAiBQ,GAAGJ,UAAUE,OAAO,QACrCR,iBAAiBU,GAAGJ,UAAUC,IAAI,yBACpC,CAEAJ,iBACAM,iBAEAZ,mBAAmBD,iBAAiB,SAAUkB,IACxCA,EAAEC,QAAUD,EAAEC,OAAOC,QAAQ,qBAC/BhB,iBAAiBI,SAAQ,CAACC,KAAMY,SAC1BH,EAAEC,SAAWV,OACfF,iBACAM,eAAeQ,OACjB,GAEJ,KAgBF,SAASC,SAASC,SAAUC,SAC1B,MAAMC,MAAQvB,SAASC,cAAcoB,UAC/BG,KAAOD,MAAMtB,cAAc,SAC3BwB,MAAQF,MAAMtB,cAAc,UAC5ByB,QAAUH,MAAMtB,cAAc,YAC9B0B,QAAUJ,MAAMtB,cAAc,YAEpC,IAAI2B,aAEJ,SAASC,gBAAgBC,MACvB,OAAIA,KAAO,GAAY,IAAGA,OAEnBA,IACT,CAEA,SAASC,cACP,MAAMC,SA1BV,SAASC,gBAAgBX,SACvB,MAAMY,eAAiB,IAAIC,KAAKb,SAAW,IAAIa,KAM/C,MAAO,CAAEX,KALIY,KAAKC,MAAMH,eAAiB,IAAO,GAAK,GAAK,IAK3CT,MAJDW,KAAKC,MAAOH,eAAiB,IAAO,GAAK,GAAM,IAIvCR,QAHNU,KAAKC,MAAOH,eAAiB,IAAO,GAAM,IAG3BP,QAFfS,KAAKC,MAAOH,eAAiB,IAAQ,IAEbA,8BAC1C,CAkBqBD,CAAgBX,SAEjCE,KAAKc,YAAcT,gBAAgBG,SAASR,MAC5CC,MAAMa,YAAcT,gBAAgBG,SAASP,OAC7CC,QAAQY,YAAcT,gBAAgBG,SAASN,SAC/CC,QAAQW,YAAcT,gBAAgBG,SAASL,SAE3CK,SAASE,gBAAkB,IAC7BK,cAAcX,cAEdJ,KAAKc,YAAc,IACnBb,MAAMa,YAAc,KACpBZ,QAAQY,YAAc,KACtBX,QAAQW,YAAc,KAE1B,CAEAP,cAEAH,aAAeY,YAAYT,YAAa,IAC1C,CAEAX,CAAS,SAlDQ,sBAkDW","file":"index.min.js","sourcesContent":["/* Global */\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n  // TABS\r\n  const tabsTriggerWrapper = document.querySelector('.tabheader__items');\r\n  const tabsTriggerItems = document.querySelectorAll('.tabheader__item');\r\n  const tabsContentItems = document.querySelectorAll('.tabcontent');\r\n\r\n  function hideTabContent() {\r\n    tabsContentItems.forEach((item) => {\r\n      item.classList.add('hide');\r\n      item.classList.remove('show', 'fade');\r\n    });\r\n\r\n    tabsTriggerItems.forEach((item) => {\r\n      item.classList.remove('tabheader__item_active');\r\n    });\r\n  }\r\n\r\n  function showTabContent(i = 0) {\r\n    tabsContentItems[i].classList.add('show', 'fade');\r\n    tabsContentItems[i].classList.remove('hide');\r\n    tabsTriggerItems[i].classList.add('tabheader__item_active');\r\n  }\r\n\r\n  hideTabContent();\r\n  showTabContent();\r\n\r\n  tabsTriggerWrapper.addEventListener('click', (e) => {\r\n    if (e.target && e.target.matches('.tabheader__item')) {\r\n      tabsTriggerItems.forEach((item, index) => {\r\n        if (e.target === item) {\r\n          hideTabContent();\r\n          showTabContent(index);\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  // TIMER\r\n  const deadline = '2023-09-01T00:00:00';\r\n\r\n  function getTimeRemaning(endtime) {\r\n    const timeDifference = new Date(endtime) - new Date();\r\n    const days = Math.floor(timeDifference / 1000 / 60 / 60 / 24);\r\n    const hours = Math.floor((timeDifference / 1000 / 60 / 60) % 24);\r\n    const minutes = Math.floor((timeDifference / 1000 / 60) % 60);\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n\r\n    return { days, hours, minutes, seconds, timeDifference };\r\n  }\r\n\r\n  function setClock(selector, endtime) {\r\n    const timer = document.querySelector(selector);\r\n    const days = timer.querySelector('#days');\r\n    const hours = timer.querySelector('#hours');\r\n    const minutes = timer.querySelector('#minutes');\r\n    const seconds = timer.querySelector('#seconds');\r\n\r\n    let timeInterval;\r\n\r\n    function correctTimeTtem(time) {\r\n      if (time < 10) return `0${time}`;\r\n\r\n      return time;\r\n    }\r\n\r\n    function updateClock() {\r\n      const timeData = getTimeRemaning(endtime);\r\n\r\n      days.textContent = correctTimeTtem(timeData.days);\r\n      hours.textContent = correctTimeTtem(timeData.hours);\r\n      minutes.textContent = correctTimeTtem(timeData.minutes);\r\n      seconds.textContent = correctTimeTtem(timeData.seconds);\r\n\r\n      if (timeData.timeDifference <= 0) {\r\n        clearInterval(timeInterval);\r\n\r\n        days.textContent = '0';\r\n        hours.textContent = '00';\r\n        minutes.textContent = '00';\r\n        seconds.textContent = '00';\r\n      }\r\n    }\r\n\r\n    updateClock();\r\n\r\n    timeInterval = setInterval(updateClock, 1000);\r\n  }\r\n\r\n  setClock('.timer', deadline);\r\n});\r\n"]}