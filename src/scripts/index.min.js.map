{"version":3,"sources":["index.js"],"names":["Menu","constructor","element","_ref","activeClass","this","menuRoot","document","querySelector","menuWrapper","menuTrigger","options","init","show","classList","add","body","style","hide","remove","removeProperty","toggle","contains","addEventListener","Tabs","_ref2","tabsRoot","tabsTrigger","querySelectorAll","tabsContent","update","bind","tabId","forEach","trigger","dataset","content","Popup","_ref3","needLock","popupRoot","popupTrigger","showPopup","id","hidePopup","window"],"mappings":"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","file":"index.min.js","sourcesContent":["/* Global */\r\n\r\nclass Menu {\r\n  constructor(element, { activeClass = 'is-active' }) {\r\n    this.menuRoot = typeof element === 'string' ? document.querySelector(element) : element;\r\n\r\n    if (this.menuRoot) {\r\n      this.menuWrapper = this.menuRoot.querySelector('.js-menu-wrapper');\r\n      this.menuTrigger = this.menuRoot.querySelector('.js-menu-trigger');\r\n\r\n      this.options = {\r\n        activeClass,\r\n      };\r\n\r\n      this.init();\r\n    }\r\n  }\r\n\r\n  show() {\r\n    this.menuWrapper.classList.add(this.options.activeClass);\r\n    this.menuTrigger.classList.add(this.options.activeClass);\r\n\r\n    document.body.style['overflow'] = 'hidden';\r\n  }\r\n\r\n  hide() {\r\n    this.menuWrapper.classList.remove(this.options.activeClass);\r\n    this.menuTrigger.classList.remove(this.options.activeClass);\r\n\r\n    document.body.style.removeProperty('overflow');\r\n  }\r\n\r\n  toggle() {\r\n    if (this.menuTrigger.classList.contains(this.options.activeClass)) {\r\n      this.hide();\r\n    } else {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  init() {\r\n    this.menuTrigger.addEventListener('click', () => this.toggle());\r\n  }\r\n}\r\n\r\nclass Tabs {\r\n  constructor(element, { activeClass = 'is-active' }) {\r\n    this.tabsRoot = typeof element === 'string' ? document.querySelector(element) : element;\r\n\r\n    if (this.tabsRoot) {\r\n      this.tabsTrigger = this.tabsRoot.querySelectorAll('.js-tabs-trigger');\r\n      this.tabsContent = this.tabsRoot.querySelectorAll('.js-tabs-content');\r\n\r\n      this.options = {\r\n        activeClass,\r\n      };\r\n\r\n      this.update = this.update.bind(this);\r\n\r\n      this.init();\r\n    }\r\n  }\r\n\r\n  update(tabId) {\r\n    this.tabsTrigger.forEach((trigger) => {\r\n      if (trigger.dataset.tabId === tabId) trigger.classList.add(this.options.activeClass);\r\n      if (trigger.dataset.tabId !== tabId) trigger.classList.remove(this.options.activeClass);\r\n    });\r\n\r\n    this.tabsContent.forEach((content) => {\r\n      if (content.dataset.tabId === tabId) content.classList.add(this.options.activeClass);\r\n      if (content.dataset.tabId !== tabId) content.classList.remove(this.options.activeClass);\r\n    });\r\n  }\r\n\r\n  init() {\r\n    this.tabsTrigger.forEach((trigger) => {\r\n      trigger.addEventListener('click', () => this.update(trigger.dataset.tabId));\r\n    });\r\n\r\n    this.update(this.tabsTrigger[0].dataset.tabId);\r\n  }\r\n}\r\n\r\nclass Popup {\r\n  constructor(element, { activeClass = 'is-active', needLock = true }) {\r\n    this.popupRoot = typeof element === 'string' ? document.querySelector(element) : element;\r\n\r\n    if (this.popupRoot) {\r\n      this.popupTrigger = document.querySelectorAll(`.js-popup-trigger`);\r\n\r\n      this.options = {\r\n        needLock,\r\n        activeClass,\r\n      };\r\n\r\n      this.init();\r\n    }\r\n  }\r\n\r\n  show() {\r\n    this.popupRoot.classList.add(this.options.activeClass);\r\n\r\n    if (this.options.needLock) document.body.style['overflow'] = 'hidden';\r\n  }\r\n\r\n  hide() {\r\n    this.popupRoot.classList.remove(this.options.activeClass);\r\n\r\n    if (this.options.needLock) document.body.style.removeProperty('overflow');\r\n  }\r\n\r\n  init() {\r\n    this.popupRoot.addEventListener('click', () => this.hide());\r\n\r\n    this.popupTrigger.forEach((trigger) => {\r\n      trigger.addEventListener('click', () => {\r\n        if (trigger.dataset.showPopup === this.popupRoot.id) this.show();\r\n        if (trigger.dataset.hidePopup === this.popupRoot.id) this.hide();\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n  // Custom scripts...\r\n});\r\n"]}