"use strict";window.addEventListener("DOMContentLoaded",(()=>{const tabsTriggerWrapper=document.querySelector(".tabheader__items"),tabsTriggerItems=document.querySelectorAll(".tabheader__item"),tabsContentItems=document.querySelectorAll(".tabcontent");function hideTabContent(){tabsContentItems.forEach((item=>{item.classList.add("hide"),item.classList.remove("show","fade")})),tabsTriggerItems.forEach((item=>{item.classList.remove("tabheader__item_active")}))}function showTabContent(){let i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;tabsContentItems[i].classList.add("show","fade"),tabsContentItems[i].classList.remove("hide"),tabsTriggerItems[i].classList.add("tabheader__item_active")}hideTabContent(),showTabContent(),tabsTriggerWrapper.addEventListener("click",(e=>{e.target&&e.target.matches(".tabheader__item")&&tabsTriggerItems.forEach(((item,index)=>{e.target===item&&(hideTabContent(),showTabContent(index))}))}));!function setClock(selector,endtime){const timer=document.querySelector(selector),days=timer.querySelector("#days"),hours=timer.querySelector("#hours"),minutes=timer.querySelector("#minutes"),seconds=timer.querySelector("#seconds");let timeInterval;function correctTimeTtem(time){return time<10?`0${time}`:time}function updateClock(){const timeData=function getTimeRemaning(endtime){const timeDifference=new Date(endtime)-new Date;return{days:Math.floor(timeDifference/1e3/60/60/24),hours:Math.floor(timeDifference/1e3/60/60%24),minutes:Math.floor(timeDifference/1e3/60%60),seconds:Math.floor(timeDifference/1e3%60),timeDifference:timeDifference}}(endtime);days.textContent=correctTimeTtem(timeData.days),hours.textContent=correctTimeTtem(timeData.hours),minutes.textContent=correctTimeTtem(timeData.minutes),seconds.textContent=correctTimeTtem(timeData.seconds),timeData.timeDifference<=0&&(clearInterval(timeInterval),days.textContent="0",hours.textContent="00",minutes.textContent="00",seconds.textContent="00")}updateClock(),timeInterval=setInterval(updateClock,1e3)}(".timer","2023-09-01T00:00:00");const modal=document.querySelector(".modal");let modalTimerId;function showModal(){modal.classList.add("show","fade"),modal.classList.remove("hide"),document.body.style.overflow="hidden",clearTimeout(modalTimerId)}function showThanksModal(text){const prevModalDialog=document.querySelector(".modal__dialog"),thanksModal=document.createElement("div");prevModalDialog.classList.add("hide"),showModal(),thanksModal.classList.add("modal__dialog"),thanksModal.innerHTML=`\n      <div class="modal__content">\n        <div class="modal__close" data-hide-modal="modal">&times;</div>\n        <div class="modal__title">${text}</div>\n      </div>\n    `,document.querySelector(".modal").append(thanksModal),setTimeout((()=>{thanksModal.remove(),prevModalDialog.classList.add("show"),prevModalDialog.classList.remove("hide"),hideModal()}),4e3)}function hideModal(){modal.classList.add("hide"),modal.classList.remove("show","fade"),document.body.style.overflow=""}document.querySelectorAll("[data-show-modal]").forEach((trigger=>{trigger.addEventListener("click",showModal)})),modal.addEventListener("click",(e=>{e.target&&e.target===modal&&hideModal(),e.target&&e.target.matches("[data-hide-modal]")&&hideModal()})),document.addEventListener("keydown",(e=>{"Escape"===e.code&&modal.classList.contains("show")&&hideModal()})),window.addEventListener("scroll",(function showModalByScroll(){window.scrollY+document.documentElement.clientHeight>=document.documentElement.scrollHeight&&(showModal(),window.removeEventListener("scroll",showModalByScroll))})),modalTimerId=setTimeout(showModal,6e4);class MenuCard{constructor(_ref){let{src:src,alt:alt,title:title,descr:descr,price:price,parentSelector:parentSelector,classes:classes=[]}=_ref;this.src=src,this.alt=alt,this.title=title,this.descr=descr,this.price=price,this.parent=document.querySelector(parentSelector),this.element=document.createElement("div"),this.classes=classes,this.transfer=95,this.converToRUB()}converToRUB(){this.price=this.price*this.transfer}render(){this.element.classList.add("menu__item"),this.classes.forEach((className=>this.element.classList.add(className))),this.element.innerHTML=`\n        <img src="${this.src}" alt="${this.alt}" />\n        <h3 class="menu__item-subtitle">${this.title}</h3>\n        <div class="menu__item-descr">${this.descr}</div>\n        <div class="menu__item-divider"></div>\n        <div class="menu__item-price">\n          <div class="menu__item-cost">Цена:</div>\n          <div class="menu__item-total"><span>${this.price}</span> руб/день</div>\n        </div>\n      `,this.parent.append(this.element)}}new MenuCard({src:"./images/tabs/vegy.jpg",alt:"vegy",title:"Меню “Фитнес“",descr:"Меню “Фитнес“ - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. Продукт активных и здоровых людей. Это абсолютно новый продукт с оптимальной ценой и высоким качеством!",price:10,parentSelector:".menu__field .container",classes:["menu__item","first"]}).render(),new MenuCard({src:"./images/tabs/elite.jpg",alt:"elite",title:"Меню “Премиум”",descr:"В меню “Премиум” мы используем не только красивый дизайн упаковки, но и качественное исполнение блюд. Красная рыба, морепродукты, фрукты - ресторанное меню без похода в ресторан!",price:25,parentSelector:".menu__field .container",classes:["second"]}).render(),new MenuCard({src:"./images/tabs/post.jpg",alt:"post",title:"Меню “Постное“",descr:"Меню “Постное” - это тщательный подбор ингредиентов: полное отсутствие продуктов животного происхождения, молоко из миндаля, овса, кокоса или гречки, правильное количество белков за счет тофу и импортных вегетарианских стейков.",price:18,parentSelector:".menu__field .container"}).render();const forms=document.querySelectorAll("form"),messages_loading="./icons/spinner.svg",messages_succses="Спаибо! Скоро мы с вами свяжемся",messages_failure="Что-то пошло не так...";forms.forEach((form=>function postData(form){form.addEventListener("submit",(e=>{e.preventDefault();const statusMessage=document.createElement("img"),formData=new FormData(form),jsonData={};statusMessage.src=messages_loading,statusMessage.style.display="block",statusMessage.style.margin="10px auto -28px auto",form.insertAdjacentElement("afterend",statusMessage),formData.forEach(((value,key)=>jsonData[key]=value)),fetch("http://localhost:3000/server.php",{method:"POST",headers:{"Content-type":"application/json"},body:JSON.stringify(jsonData)}).then((data=>data.text())).then((data=>{console.log(data),showThanksModal(messages_succses)})).catch((()=>{showThanksModal(messages_failure)})).finally((()=>{statusMessage.remove(),form.reset()}))}))}(form)))}));
//# sourceMappingURL=index.min.js.map